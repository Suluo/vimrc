" start vim plug
call plug#begin('~/.vim/plugged')

" required! 
Plug 'junegunn/vim-plug'

" My Plugs here:
"
" 一些基础配置
Plug 'tpope/vim-sensible'
" copyright
Plug 'nine2/vim-copyright'
" Fugitive: Git 集成，强烈推荐！
Plug 'tpope/vim-fugitive'
" git diff
Plug 'airblade/vim-gitgutter'
" " Solarized: 非常流行的配色。
Plug 'altercation/vim-colors-solarized'
" 目录树
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'jistr/vim-nerdtree-tabs'
" 目录树git显示
Plug 'Xuyuanp/nerdtree-git-plugin'
" vim 8，tagbar的超集
Plug 'liuchengxu/vista.vim'
" 缩进指示线
Plug 'Yggdroot/indentLine'
" 语法检查
Plug 'nvie/vim-flake8'
Plug 'hdima/python-syntax'
Plug 'w0rp/ale'
" python import sort
Plug 'fisadev/vim-isort'
" 符号补全
Plug 'jiangmiao/auto-pairs' 
" 自动格式化工具: F8，安装后运行:Autopep8就可以自动依照pep8的标准自动格式化代码
Plug 'tell-k/vim-autopep8'
" 补全
Plug 'msanders/snipmate.vim'
Plug 'drmingdrmer/xptemplate'
" 补全提示: \
Plug 'davidhalter/jedi-vim'
" vim 8
" 深度学习补全
" Plug 'zxqfl/tabnine-vim'

" " Web
"神级插件，ZenCoding(原名)可以让你以一种神奇而无比爽快的感觉写HTML、CSS
Plug 'mattn/emmet-vim'
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}
" scala
" shell 执行如下命令
" mkdir -p ~/.vim/{ftdetect,indent,syntax}
" for d in ftdetect indent syntax
"    do wget --no-check-certificate -O ~/.vim/$d/scala.vim \
"      https://raw.githubusercontent.com/derekwyatt/vim-scala/master/$d/scala.vim;
"    done
Plug 'derekwyatt/vim-scala'

" python-mode: PyLint, Rope, Pydoc, breakpoints from box.
Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' } 

" 全功能：覆盖了很多插件 详细见 .vimrc.local
Plug 'spf13/spf13-vim'
Plug 'vim-airline/vim-airline'

" Go
" Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
" Plug 'vim-gocode'

" mark-down
Plug 'plasticboy/vim-markdown'
" cp ~/.vim/Plug/vim-markdown/syntax/markdown.vim ~/.vim/syntax/
" cp ~/.vim/Plug/vim-markdown/ftdetect/markdown.vim ~/.vim/ftdetect/
" 实时预览markdown only in win or mac
" Plug 'suan/vim-instant-markdown'

call plug#end()

filetype plugin indent on     " required!
"
" Brief help
" https://github.com/junegunn/vim-plug
" PlugInstall [name ...] [#threads]	Install plugins
" PlugUpdate [name ...] [#threads]	Install or update plugins
" PlugClean[!] Remove unlisted plugins (bang version will clean without prompt)
" PlugUpgrade Upgrade vim-plug itself
" PlugStatus Check the status of plugins
" PlugDiff Examine changes from the previous update and the pending changes
" PlugSnapshot[!] [output path]	Generate script for restoring the current snapshot of the plugins
"
" NOTE: comments after Plug command are not allowed..
